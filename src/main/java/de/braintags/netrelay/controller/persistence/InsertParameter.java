/*
 * #%L
 * NetRelay-Controller
 * %%
 * Copyright (C) 2016 Braintags GmbH
 * %%
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * #L%
 */
package de.braintags.netrelay.controller.persistence;

import java.util.Collection;

import de.braintags.io.vertx.pojomapper.mapping.IMapper;

/**
 * Instance is generated by {@link RecordContractor} to deliver the information, which are needed to insert a subrecord
 * 
 * 
 * @author Michael Remme
 *
 */
@SuppressWarnings("rawtypes")
public class InsertParameter {
  private Collection parentCollection;
  private IMapper subObjectMapper;
  private String fieldPath = null;

  /**
   * The colection, where a child object shall be handled
   * 
   * @return the parentCollection
   */
  public Collection getParentCollection() {
    return parentCollection;
  }

  /**
   * The colection, where a child object shall be handled
   * 
   * @param parentCollection
   *          the parentCollection to set
   */
  public void setParentCollection(Collection parentCollection) {
    this.parentCollection = parentCollection;
  }

  /**
   * the mapper for the subobject, to be handled
   * 
   * @return the subObjectMapper
   */
  public IMapper getSubObjectMapper() {
    return subObjectMapper;
  }

  /**
   * the mapper for the subobject, to be handled
   * 
   * @param subObjectMapper
   *          the subObjectMapper to set
   */
  public void setSubObjectMapper(IMapper subObjectMapper) {
    this.subObjectMapper = subObjectMapper;
  }

  /**
   * Describes the pure path for a subobject, with out some record references. The first entry is the mapper name of
   * the main object, the rest are fields and subfields
   * Something like Person.phoneNumbers or Country.cities.streets
   * 
   * @return the fieldPath
   */
  public String getFieldPath() {
    return fieldPath;
  }

  public void addFieldPath(String newPath) {
    if (fieldPath == null) {
      fieldPath = newPath;
    } else {
      fieldPath += "." + newPath;
    }
  }

  /**
   * @param fieldPath
   *          the fieldPath to set
   */
  public void setFieldPath(String fieldPath) {
    this.fieldPath = fieldPath;
  }
}